@model PaginatedList<PhotographersVideoDist.Models.Case>

@{
    ViewData["Title"] = "Sags oversigt";
}

<h1>Sags oversigt</h1>

<hr />

@if ((await AuthorizationService.AuthorizeAsync(User, new Case(), AuthorizationOperations.Create)).Succeeded)
{
    <p>
        <a class="btn badge-primary" asp-action="Create" asp-controller="Cases">Opret sag</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Published)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Titel)
            </th>
            <th>
                Handlinger
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Published)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Titel)
                </td>
                <td>
                    <a asp-action="Details" asp-controller="Cases" asp-route-caseID="@item.CaseID">Vis</a>

                    @if ((await AuthorizationService.AuthorizeAsync(User, item, AuthorizationOperations.Update)).Succeeded)
                    {
                        <br />
                        <a asp-action="Edit" asp-controller="Cases" asp-route-caseID="@item.CaseID">Rediger</a>
                    }

                    @if ((await AuthorizationService.AuthorizeAsync(User, item, AuthorizationOperations.Delete)).Succeeded)
                    {
                        <br />
                        <a asp-action="Delete" asp-controller="Cases" asp-route-caseID="@item.CaseID">Slet</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Forrige
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Næste
</a>