@model PhotographersVideoDist.Models.AssetsUploadViewModel
@{
    ViewData["Title"] = "Upload Assets";
}

<h1>@ViewData["Title"]</h1>

<hr />

<div class="row">
    <div class="col-md-6">
        <h4>Sags nr: @Model.Case.CaseID</h4>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <p>@Model.Case.Titel</p>
    </div>
</div>


@if ((await AuthorizationService.AuthorizeAsync(User, new Case(), AuthorizationOperations.Upload)).Succeeded)
{
    <form enctype="multipart/form-data" asp-action="/Cases/Upload">
        <input id="routevalue" name="id" type="hidden" value="@Model.Case.CaseID" />
        <div class="row">
            <div class="col-md-6">
                <hr />
                <span class="btn btn-success fileinput-button">
                    <span>Tilføj Assets</span>
                    <input id="fileupload" name="files" type="file" multiple />
                </span>
                @if (!Model.Case.IsPublished)
                {
                    <button class="btn btn-primary" asp-action="Publish" asp-route-caseID="@Model.Case.CaseID">Udgiv</button>
                }
                else
                {
                    <button class="btn btn-primary" asp-action="SendFilesToFTPServer" asp-route-caseID="@Model.Case.CaseID">Send igen</button>
                }
                <button class="btn btn-primary" asp-action="Index">Sags Oversigt</button>
            </div>
        </div>
    </form>
    <div class="row d-none" id="progressRow">
        <div class="col-md-6">
            <hr />
            <div id="overallProgress" class="progress">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;"></div>
            </div>
            <hr />
        </div>
    </div>
    <div class="row d-none" id="filelistholderRow">
        <div class="col-md-6">
            <div class="well" id="filelistholder"></div>
        </div>
        <hr />
    </div>
}

<hr />

<table class="table">
    <thead title="Video Assets">
        <tr class="row">
            <th class="offset-md-2 col-md-8">
                <label>Video Assets</label>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var videoAssets in Model.Case.VideoAssets)
        {
            <tr class="row">
                <td class=" offset-md-2 col-md-8">
                    <p><span>ID: @Html.DisplayFor(modelItem => videoAssets.VideoAssetsID)</span><p>
                    <p><span>Filnavn: @Html.DisplayFor(modelItem => videoAssets.VideoAssetsFileName)</span></p>
                    <video class="assets-size" src="/Cases/@videoAssets.CaseID/@videoAssets.VideoAssetsFileName" controls type="video/mp4" preload="metadata"></video>
                    <div>
                        @if ((await AuthorizationService.AuthorizeAsync(User, Model.Case, AuthorizationOperations.MediaProcessing)).Succeeded)
                        {
                            <a class="btn btn-primary" asp-action="GenerateStillsFromVideo" asp-route-videoFileName="@videoAssets.VideoAssetsFileName" asp-route-assetsFolderID="@Model.Case.CaseID">Auto Stills</a>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Model.Case, AuthorizationOperations.Delete)).Succeeded)
                        {
                            <a class="btn alert-danger" asp-action="DeleteVideoAssets" asp-route-id="@videoAssets.VideoAssetsID" asp-route-caseId="@videoAssets.CaseID">Slet</a>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<hr />

<table class="table">
    <thead title="Billede Assets">
        <tr class="row">
            <th class="offset-md-2 col-md-8">
                <label>Image Assets</label>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var imageAssets in Model.Case.ImageAssets)
        {
            <tr class="row">
                <td class="offset-md-2 col-md-8">
                    <p><span>@Html.DisplayFor(modelItem => imageAssets.ImageAssetsID)</span></p>
                    <p><span>@Html.DisplayFor(modelItem => imageAssets.ImageFileName)</span></p>

                    <img class="assets-size img-thumbnail" src="/Cases/@imageAssets.CaseID/@imageAssets.ImageFileName" />

                    @if ((await AuthorizationService.AuthorizeAsync(User, Model.Case, AuthorizationOperations.IsOwner)).Succeeded)
                    {
                        <a class="btn btn-danger" asp-action="DeleteImageAssets" asp-route-id="@imageAssets.ImageAssetsID" asp-route-caseId="@imageAssets.CaseID">Slet</a>
                        <input asp-for="@imageAssets.ImageIsPrimary" />
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="~/lib/jquery-fileupload/jquery.fileupload.js"></script>
    <script src="~/lib/jquery-fileupload/jquery.fileupload-ui.js"></script>
    <script src="~/lib/jquery-fileupload/jquery.iframe-transport.js"></script>
    <script type="text/javascript">
        var filesCount = 0, filesUploaded = 0;

        $('#fileupload').fileupload({
            type: "post",
            dataType: "json",
            url: "/Cases/Upload",
            limitConcurrentUploads: 1,
            sequentialUploads: true,
            progressInterval: 100,
            add: function (e, data) {
                filesCount++;
                $('#progressRow').removeClass('d-none');
                $('#filelistholderRow').removeClass('d-none');
                data.context = $('<div />').text(data.files[0].name).appendTo('#filelistholder');
                $('</div><div class="progress"><div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width:0%"></div></div>').appendTo(data.context);
                data.submit();
            },
            done: function (e, data) {
                filesUploaded++;
                data.context.text(data.files[0].name + " - " + data.result.value);

                if (filesUploaded === filesCount) {
                    location.reload();
                }
            },
            fail: function (e, data) {
                filesUploaded++;
                data.context.text(data.files[0].name + " - " + data.jqXHR.statusText);

                if (filesUploaded === filesCount) {
                    location.reload();
                }
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#overallProgress .progress-bar').css(
                    'width',
                    progress + '%'
                );
            },
            progress: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                data.context.find('.progress-bar').css('width', progress + '%');
            }
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}